image: golang:1.9.1

before_script:
  - ln -s $PWD $GOPATH/src/MonitorCore
  - cd $GOPATH/src/MonitorCore

stages:
  - build


build:linux32:
  stage: build
  script:
    - GOOS=linux GOARCH=386 go build -o $GOPATH/src/MonitorCore/MonitorCore_linux32
  artifacts:
    when: on_success
    name: "MonitorCore_${CI_BUILD_NAME}_${CI_BUILD_REF_NAME}"
    paths:
    - MonitorCore_*
  only:
  - tags


build:linux64:
  image: golang:1.9.1
  stage: build
  script:
    - GOOS=linux GOARCH=amd64 go build -o $GOPATH/src/MonitorCore/MonitorCore_linux64
  artifacts:
    when: on_success
    name: "MonitorCore_${CI_BUILD_NAME}_${CI_BUILD_REF_NAME}"
    paths:
    - MonitorCore_*
  only:
  - tags


build:windows32:
  image: golang:1.9.1
  stage: build
  script:
    - GOOS=windows GOARCH=386 go build -o $GOPATH/src/MonitorCore/MonitorCore_win32.exe
  artifacts:
    when: on_success
    name: "MonitorCore_${CI_BUILD_NAME}_${CI_BUILD_REF_NAME}"
    paths:
    - MonitorCore_*
  only:
  - tags


build:windows64:
  stage: build
  script:
    - GOOS=windows GOARCH=amd64 go build -o $GOPATH/src/MonitorCore/MonitorCore_win64.exe
  artifacts:
    when: on_success
    name: "MonitorCore_${CI_BUILD_NAME}_${CI_BUILD_REF_NAME}"
    paths:
    - MonitorCore_*
  only:
  - tags


build:darwin:
  stage: build
  script:
    - GOOS=darwin GOARCH=amd64 go build -o $GOPATH/src/MonitorCore/MonitorCore_darwin
  artifacts:
    when: on_success
    name: "MonitorCore_${CI_BUILD_NAME}_${CI_BUILD_REF_NAME}"
    paths:
    - MonitorCore_*
  only:
  - tags